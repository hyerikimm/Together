<?xml version="1.0" encoding="UTF-8" ?>

<!-- DOCTYPE은 문서의 형식을 의미함 -->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
  <!-- 
  		이 문서의 형식이 configuration(환경설정)임을 알려줌
  		=> configuration태그가 전체를 감싸는 구조
  		dtd : 유효성 체크해주는 코드(현재 문서 안에서 사용할 수 있는 태그인지 검사)
  -->
  
<configuration>
	<!-- setting : MyBatis 구동 시 선언할 설정들 작성하는 영역 -->
	<settings>
		<!-- 만약 null로 데이터가 전달되었다면 빈 칸이 아닌 NULL로 인식하겠다라는 셋팅. value값은 대문자 NULL로 작성해야한다. 에러는 줄어들게 할 수는 있지만 근본적인 해결책은 아님!  -->
		<setting name="jdbcTypeForNull" value="NULL"></setting>
	</settings>


	<!-- typeAlias : VO/DTO클래스들의 풀 클래스명 대신 단순한 클래스명으로 사용하기 위해 별칭을 등록할 수 있는 영역 -->
	 
	<!-- <typeAliases>
		<typeAlias type="com.kh.spring.member.model.vo.Member" alias ="member"/>
		
		<typeAlias type="com.kh.spring.board.model.vo.Board" alias ="board" />
		<typeAlias type="com.kh.spring.board.model.vo.Reply" alias ="reply" />
		<typeAlias type="com.kh.spring.board.model.vo.BoardType" alias ="boardType" />
		<typeAlias type="com.kh.spring.board.model.vo.BoardImg" alias ="boardImg" />
		
		<typeAlias type="com.kh.spring.chat.model.vo.ChatMessage" alias ="chatMessage" />
		<typeAlias type="com.kh.spring.chat.model.vo.ChatRoom" alias ="chatRoom" />
		<typeAlias type="com.kh.spring.chat.model.vo.ChatRoomJoin" alias ="chatRoomJoin" />
	</typeAliases>  -->
	<!-- 
		environments, dataSource에 기술했던 DB연결정보는 root-context.xml에 작성한다.
		-> DB등록은 서버 연동과 "동시에" 이루어져야하기 때문에
		서버연결과 동시에 읽혀지는 root-context.xml에 기술하는 것.
	 -->
	
  	<!-- 
  		environment : mybatis에서 연동할 DB정보들을 등록하는 공간 (여러 개도 가능)설정가능한 환경설정 
  		=> default속성으로 여러개의 id중 어떤 DB를 기본 DB로 사용할건지 설정해줘야한다. 
  		현재 id는 "development"
  	-->

  
  <!-- mapper : 실행할 sql문들을 기록해둔 mapper파일들을 등록하는 영역 -->
  <!-- 사용가능한 자원 등록  -->
 <!--  <mappers>
    <mapper resource="/mappers/member-mapper.xml"/>
    <mapper resource="/mappers/board-mapper.xml"/>
  	<mapper resource="/mappers/chatting-mapper.xml"/>
  </mappers> -->
  
  
</configuration>